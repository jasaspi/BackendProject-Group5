<div class="container d-flex justify-content-center">
    <div class="row">
        <div class="col">

<h1>Hei - {{username}}. Alla eriteltynä menneet ja tulevat lähtöhetket</h1><br>
<section>
<div id="future_usage_info">
  <h2>Tulevat lähdöt ja niihin liittyvä tieto:</h2>

<table role="table" aria-label="Tulevat lähdöt ja niihin liittyvä tieto:">
  <thead>
    <tr role="row">
      <th role="columnheader">Lähtöaika</th>
      <th role="columnheader">Arvioitu matka kilometreissä</th>
      <th role="columnheader">Lataustunnit</th>
      <th role="columnheader">Keskihinta</th>
      <th role="columnheader">Lämpötila</th>
      <th role="columnheader">Toimenpiteet</th>
    </tr>
  </thead>
  <tbody>
    {{#each usageFuture}}
    <tr role="row">
      <td role="cell">{{this.departureTime}}</td>
      <td role="cell">{{this.estimatedMileage}}</td>
      <td role="cell">{{this.neededHours}}</td>
      <td role="cell">{{this.averagePrice}}</td>
      <td role="cell">{{this.temperature}}</td>
      <td role="cell"><button onclick="updateUsage('{{this.id}}')"aria-label="Päivitä rivitietoja">Päivitä</button>
        <button onclick="deleteUsage('{{this.id}}')"aria-label="Poista rivi">Poista</button>
      </td>
    </tr>
    <tr role="row" hidden data-id="{{this.id}}"></tr>
    {{/each}}
  </tbody>
</table>
</div>
</section>


<script>
  function deleteUsage(id) {
    fetch(`/usage/${id}`, {
      method: 'DELETE'
    })
      .then(response => {
        if (response.ok) {
          location.reload();
        } else {
          location.reload();
          console.log('Poisto epäonnistui');
        }
      })
      .catch(error => console.log(error));
  }

  function updateUsage(id) {
    const row = document.querySelector(`tr[data-id="${id}"]`);

    let updatedDepartureTime = '';
    while (!updatedDepartureTime || !/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}$/.test(updatedDepartureTime)) {
      updatedDepartureTime = prompt('Syötä uusi lähtöaika (muodossa YYYY-MM-DDTHH:MM:SS):');
    }

    let updatedEstimatedMileage = '';
    while (!updatedEstimatedMileage || isNaN(updatedEstimatedMileage) || parseInt(updatedEstimatedMileage) !== parseFloat(updatedEstimatedMileage)) {
      updatedEstimatedMileage = prompt('Syötä uusi arvio matkan pituudesta (kokonaisluku):');
    }

    let updatedLocation = '';
    while (!updatedLocation) {
      updatedLocation = prompt('Syötä uusi lähtöpaikka:');
    }

    fetch(`/usage/${id}`, {
      method: 'PATCH',
      body: JSON.stringify({
        departureTime: updatedDepartureTime,
        estimatedMileage: parseInt(updatedEstimatedMileage),
        location: updatedLocation
      }),
      headers: {
        'Content-Type': 'application/json'
      }
    })
      .then(response => {
        if (response.ok) {
          location.reload();
        } else {
          console.log('Päivitys epäonnistui');
          location.reload();
        }
      })
      .catch(error => console.log(error));
  }


</script>

<section>
<div id="past_usage_info">
 <h2>Menneet lähdöt ja niihin liittyvä tieto:</h2>

<table role="table" aria-label="Menneet lähdöt ja niihin liittyvä tieto:">
  <thead>
    <tr role="row">
      <th role="columnheader">Lähtöaika</th>
      <th role="columnheader">Arvioitu matka kilometreissä</th>
      <th role="columnheader">Lataustunnit</th>
      <th role="columnheader">Keskihinta</th>
      <th role="columnheader">Lämpötila</th>  
    </tr>
  </thead>

  <tbody>
    {{#each usagePast}}
    <tr role="row">
      <td role="cell">{{this.departureTime}}</td>
      <td role="cell">{{this.estimatedMileage}}</td>
      <td role="cell">{{this.neededHours}}</td>
      <td role="cell">{{this.averagePrice}}</td>
      <td role="cell">{{this.temperature}}</td>
    </tr>
  
    {{/each}}
  </tbody>
</table>
</div>
</section>

        </div>
    </div>
</div>